#version 450
layout(local_size_x = 1, local_size_y = 1) in;
layout(binding = 0, rgba32f) uniform image2D outputValues;

layout(binding = 1, rgba32f) uniform readonly image2D values;
// readonly
layout(binding = 2, rgba32f) uniform readonly image2D filterValues;
layout(constant_id = 0) const uint BUFFER_ELEMENTS = 32;
// 32-bit IEEE 754 binary32 format representation of real number 1:
// https://en.wikipedia.org/wiki/Single-precision_floating-point_format
// https://www.h-schmidt.net/FloatConverter/IEEE754.html
void main() {
  // uint index = gl_GlobalInvocationID.x;
  uint row = (gl_GlobalInvocationID.x);
  uint col = (gl_GlobalInvocationID.y);
  vec4 x = imageLoad(values, ivec2(row, col)).rgba;
  vec4 w = imageLoad(filterValues, ivec2(row, col)).rgba;
  vec4 res = x + w;
  imageStore(outputValues, ivec2(gl_GlobalInvocationID.xy), res);
}
